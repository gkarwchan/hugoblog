<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>azure app service on Ghassan Page</title>
    <link>http://www.ghassan.page/tags/azure-app-service/</link>
    <description>Recent content in azure app service on Ghassan Page</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Feb 2023 20:20:40 -0700</lastBuildDate><atom:link href="http://www.ghassan.page/tags/azure-app-service/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introducing Kudu, the engine that handle all web application deployment to Azure App Service.</title>
      <link>http://www.ghassan.page/posts/0010_introducing_kudu/</link>
      <pubDate>Wed, 01 Feb 2023 20:20:40 -0700</pubDate>
      
      <guid>http://www.ghassan.page/posts/0010_introducing_kudu/</guid>
      <description>If you follow any tutorials on Azure App Service, you will find that they use one of five options to deploy a web application to the Azure.
Using Azure DevOps Using Github actions and webhooks. FTP Zip Deploy. MSDeploy (Microsoft Web Deploy tool). But behind the scenes, all these options are using the same back engine, which is Kudu.
When we use FTP, Zip, or MSDeploy, we are actually calling Kudu REST API for deployment.</description>
    </item>
    
    <item>
      <title>Azure Networking Recipes - Connect Azure Database and an Azure App Service using Virtual Network.</title>
      <link>http://www.ghassan.page/posts/0008_azure_networking_reciep_one/</link>
      <pubDate>Tue, 10 Jan 2023 20:00:24 -0700</pubDate>
      
      <guid>http://www.ghassan.page/posts/0008_azure_networking_reciep_one/</guid>
      <description>If your application is connecting to Azure database, or any other resources, then connecting them through Virtual Network (VNet) will enhance the performance (assuming the app service and the resources are in the same region), as well it enhance the security and we can lock the resources to have private endpoint, and not accessed publicly. I am going to go through a walk-through tutorial, using Azure Sql Server as an example, but this can work with any database on Azure, or even any resources like blob storage.</description>
    </item>
    
  </channel>
</rss>
