<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>azure on Ghassan Blog</title>
    <link>http://www.ghassan.page/tags/azure/</link>
    <description>Recent content in azure on Ghassan Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Feb 2023 20:22:20 -0700</lastBuildDate><atom:link href="http://www.ghassan.page/tags/azure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Implement a watchdog for your microservices using off-the-shelf ASP.Net Healthcheck UI.</title>
      <link>http://www.ghassan.page/posts/0011_aspnet_watchdog/</link>
      <pubDate>Wed, 01 Feb 2023 20:22:20 -0700</pubDate>
      
      <guid>http://www.ghassan.page/posts/0011_aspnet_watchdog/</guid>
      <description>What is a watchdogA watchdog is a service that monitor other services and take actions when it detect a service is failing.
ASP.NET starting from Core 5 has a built in UI module to monitor other services, and in few line of code you can build a watchdog for your services.
How to hook it up with your services:Your microservices should implement health check endpoints to be monitored by the orchestration service (Kubernetes, docker storm, &amp;hellip; etc).</description>
    </item>
    
    <item>
      <title>Introducing Kudu, the engine that handle all web application deployment to Azure App Service.</title>
      <link>http://www.ghassan.page/posts/0010_introducing_kudu/</link>
      <pubDate>Wed, 01 Feb 2023 20:20:40 -0700</pubDate>
      
      <guid>http://www.ghassan.page/posts/0010_introducing_kudu/</guid>
      <description>If you follow any tutorials on Azure App Service, you will find that they use one of five options to deploy a web application to the Azure.
Using Azure DevOps Using Github actions and webhooks. FTP Zip Deploy. MSDeploy (Microsoft Web Deploy tool). But behind the scenes, all these options are using the same back engine, which is Kudu.
When we use FTP, Zip, or MSDeploy, we are actually calling Kudu REST API for deployment.</description>
    </item>
    
    <item>
      <title>Azure Networking Recipes - Connect Azure Database and an Azure App Service using Virtual Network.</title>
      <link>http://www.ghassan.page/posts/0008_azure_networking_reciep_one/</link>
      <pubDate>Tue, 10 Jan 2023 20:00:24 -0700</pubDate>
      
      <guid>http://www.ghassan.page/posts/0008_azure_networking_reciep_one/</guid>
      <description>If your application is connecting to Azure database, or any other resources, then connecting them through Virtual Network (VNet) will enhance the performance (assuming the app service and the resources are in the same region), as well it enhance the security and we can lock the resources to have private endpoint, and not accessed publicly. I am going to go through a walk-through tutorial, using Azure Sql Server as an example, but this can work with any database on Azure, or even any resources like blob storage.</description>
    </item>
    
    <item>
      <title>A developer introduction to cloud networking</title>
      <link>http://www.ghassan.page/posts/0009_introduction_azure_networking/</link>
      <pubDate>Sun, 08 Jan 2023 20:07:36 -0700</pubDate>
      
      <guid>http://www.ghassan.page/posts/0009_introduction_azure_networking/</guid>
      <description>As a developer who dealt with the cloud, either to create a virtual machine, or to deploy a website that connect to a database, then most probabely you had to deal even in short with a private network. And most of us developers don&amp;rsquo;t know a lot about networking, because it is either the job of dev-ops or system administrator. But on the cloud you find that you have to take some decisions related to the networking.</description>
    </item>
    
    <item>
      <title>Deploy A Single Page Application to Azure Static Webapp using TeamCity, Jenkins or any CI, or command line</title>
      <link>http://www.ghassan.page/posts/azure_static_webapp_deployment/</link>
      <pubDate>Tue, 03 Jan 2023 19:56:30 -0700</pubDate>
      
      <guid>http://www.ghassan.page/posts/azure_static_webapp_deployment/</guid>
      <description>I was trying to setup a deployment for an SPA application to an Azure Static Web app using TeamCity, but most of the tutorials I found was doing the deployment through CI/CD of Github&amp;rsquo;s Actions by monitoring a specific branch of a Github repository and deploy automatically whenever we check in into that branch, or the other alternative is using Azure DevOps pipeline. But what if we don&amp;rsquo;t want to use neither, and instead we need to do it on demand from TeamCity, or any other CI/CD tool?</description>
    </item>
    
    <item>
      <title>How to fix common error using Azure Kubernetes AKS from WSL2</title>
      <link>http://www.ghassan.page/posts/fix_common_error_kubernets_wsl2/</link>
      <pubDate>Tue, 27 Dec 2022 19:43:59 -0700</pubDate>
      
      <guid>http://www.ghassan.page/posts/fix_common_error_kubernets_wsl2/</guid>
      <description>When you use Kubernetes CLI tool: kubectl that is installed while you installed Docker Desktop for Windows, there is a small glitch that it will fail the kubectl commands, because of Kubeconfig file.
Let&amp;rsquo;s supposed you want to create a new cluster on AKS, as follows:
1az aks create --resource-group MyResourceGropu --name MyMicroserviceCluster --node-count 1 --enable-addons http_application_routing --generate-ssh-keys And then you need to set that new cluster as your default cluster to work on, so you use</description>
    </item>
    
  </channel>
</rss>
