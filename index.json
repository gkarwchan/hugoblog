[{"date":"27 December, 2022","subtitle":"Kubernetes Monitoring:Kubernetes monitors the deployed microservices and check if any failure or a deadlock that makes the service not responding in order to restart the hosting container.\nKubernetes achieve this by calling three different probes that determine the status of the container/pod. The three probes are:\nliveness: which monitor any deadlock, or the service is down, and Kubernetes will remove the dead container and restart another one. startup: Your service might need time at startup to wait for all its dependencies to be ready.","tags":"kubernetes-k8s asp.net aks","title":"Prepare .NET core Microservice to be monitored by Kubernetes","url":"/posts/prepare_aspnet_api_monitored_by_k8s/"},{"date":"27 December, 2022","subtitle":"When you use Kubernetes CLI tool: kubectl that is installed while you installed Docker Desktop for Windows, there is a small glitch that it will fail the kubectl commands, because of Kubeconfig file.\nLet\u0026rsquo;s supposed you want to create a new cluster on AKS, as follows:\n1az aks create --resource-group MyResourceGropu --name MyMicroserviceCluster --node-count 1 --enable-addons http_application_routing --generate-ssh-keys And then you need to set that new cluster as your default cluster to work on, so you use","tags":"kubernetes-k8s aks azure","title":"How to fix common error using Azure Kubernetes AKS from WSL2","url":"/posts/fix_common_error_kubernets_wsl2/"},{"date":"19 December, 2022","subtitle":"Why this post?Looking at the new ASP.NET 6 and its minimal hosting model, triggered some thoughts comparing it to ASP.NET 2, and made me think if Microsoft going back to some old concepts. And was questioning the real benefits of migrating to this model. So let me explain, and compare it with ASP.NET version 5 and 2.\nThe new WebApplication builder and some history of ASP.NET:Let us generate a new webapi application in .","tags":"asp.net","title":"Some thoughts about ASP.NET Minimal API and Minimal Hosting Model","url":"/posts/aspnet_minimal_api/"},{"date":"28 November, 2022","subtitle":"It is critical not to store passwords or API keys in our code.\nFor all environments for the development process: (QA, UAT, Pre-Production, and Production), it is easier to place it in a safe place (Azure Key Vault for example), and access it during deployment.\nFor developer machines, we can use Secret Manager, or sometimes called User Secrets, which has a built-in support in ASP.NET.\nEnable Secret Storage:In the project you want to add a secret run this command:","tags":"asp.net","title":"Using Secret Manager for Configuration in .NET","url":"/posts/use_secret_manager_in_dotnet/"}]