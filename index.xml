<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ghassan Blog</title>
    <link>http://www.ghassan.page/</link>
    <description>Recent content on Ghassan Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Jan 2023 20:00:24 -0700</lastBuildDate><atom:link href="http://www.ghassan.page/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Azure Networking Recipes - Connect Azure Database and an Azure App Service using Virtual Network.</title>
      <link>http://www.ghassan.page/posts/0008_azure_networking_reciep_one/</link>
      <pubDate>Tue, 10 Jan 2023 20:00:24 -0700</pubDate>
      
      <guid>http://www.ghassan.page/posts/0008_azure_networking_reciep_one/</guid>
      <description>If your application is connecting to Azure database, or any other resources, then connecting them through Virtual Network (VNet) will enhance the performance (assuming the app service and the resources are in the same region), as well it enhance the security and we can lock the resources to have private endpoint, and not accessed publicly. I am going to go through a walk-through tutorial, using Azure Sql Server as an example, but this can work with any database on Azure, or even any resources like blob storage.</description>
    </item>
    
    <item>
      <title>SPA routing and how to handle it with Azure Static Web app.</title>
      <link>http://www.ghassan.page/posts/007_azure_static_webapp_routing/</link>
      <pubDate>Sun, 08 Jan 2023 19:58:31 -0700</pubDate>
      
      <guid>http://www.ghassan.page/posts/007_azure_static_webapp_routing/</guid>
      <description>If you built a SPA application using one of the modern SPA frameworks like React, Vue, Angular&amp;hellip;, then you must be using their router to define your client side routing.
But you need to make a small adjustment on the server that serve your static application in order to deal with client routing gracefully, and this small adjustment is to tell the server to have a fall back on any route that is not recognized by the server to the root of the application.</description>
    </item>
    
    <item>
      <title>Deploy A Single Page Application to Azure Static Webapp using TeamCity, Jenkins or any CI, or command line</title>
      <link>http://www.ghassan.page/posts/azure_static_webapp_deployment/</link>
      <pubDate>Tue, 03 Jan 2023 19:56:30 -0700</pubDate>
      
      <guid>http://www.ghassan.page/posts/azure_static_webapp_deployment/</guid>
      <description>I was trying to setup a deployment for an SPA application to an Azure Static Web app using TeamCity, but most of the tutorials I found was doing the deployment through CI/CD of Github&amp;rsquo;s Actions by monitoring a specific branch of a Github repository and deploy automatically whenever we check in into that branch, or the other alternative is using Azure DevOps pipeline. But what if we don&amp;rsquo;t want to use neither, and instead we need to do it on demand from TeamCity, or any other CI/CD tool?</description>
    </item>
    
    <item>
      <title>Take your development environment anywhere and on any machine with Dev Containers</title>
      <link>http://www.ghassan.page/posts/devcontainer/</link>
      <pubDate>Thu, 29 Dec 2022 19:51:56 -0700</pubDate>
      
      <guid>http://www.ghassan.page/posts/devcontainer/</guid>
      <description>Dev containers provides a fantastic way to onboard a new developer up and running in matter of just clone the git repository.
Dev containers allow you to create a docker container that will host all the development tools and libraries you use in your projects, and run it inside the container, and if you have an editor compatible then you can make the IDE connect to the containers and you can run or debug your code inside the containers.</description>
    </item>
    
    <item>
      <title>Prepare .NET core Microservice to be monitored by Kubernetes</title>
      <link>http://www.ghassan.page/posts/prepare_aspnet_api_monitored_by_k8s/</link>
      <pubDate>Tue, 27 Dec 2022 19:47:05 -0700</pubDate>
      
      <guid>http://www.ghassan.page/posts/prepare_aspnet_api_monitored_by_k8s/</guid>
      <description>Kubernetes Monitoring:Kubernetes monitors the deployed microservices and check if any failure or a deadlock that makes the service not responding in order to restart the hosting container.
Kubernetes achieve this by calling three different probes that determine the status of the container/pod. The three probes are:
liveness: which monitor any deadlock, or the service is down, and Kubernetes will remove the dead container and restart another one. startup: Your service might need time at startup to wait for all its dependencies to be ready.</description>
    </item>
    
    <item>
      <title>How to fix common error using Azure Kubernetes AKS from WSL2</title>
      <link>http://www.ghassan.page/posts/fix_common_error_kubernets_wsl2/</link>
      <pubDate>Tue, 27 Dec 2022 19:43:59 -0700</pubDate>
      
      <guid>http://www.ghassan.page/posts/fix_common_error_kubernets_wsl2/</guid>
      <description>When you use Kubernetes CLI tool: kubectl that is installed while you installed Docker Desktop for Windows, there is a small glitch that it will fail the kubectl commands, because of Kubeconfig file.
Let&amp;rsquo;s supposed you want to create a new cluster on AKS, as follows:
1az aks create --resource-group MyResourceGropu --name MyMicroserviceCluster --node-count 1 --enable-addons http_application_routing --generate-ssh-keys And then you need to set that new cluster as your default cluster to work on, so you use</description>
    </item>
    
    <item>
      <title>Some thoughts about ASP.NET Minimal API and Minimal Hosting Model</title>
      <link>http://www.ghassan.page/posts/aspnet_minimal_api/</link>
      <pubDate>Mon, 19 Dec 2022 19:15:28 -0700</pubDate>
      
      <guid>http://www.ghassan.page/posts/aspnet_minimal_api/</guid>
      <description>Why this post?Looking at the new ASP.NET 6 and its minimal hosting model, triggered some thoughts comparing it to ASP.NET 2, and made me think if Microsoft going back to some old concepts. And was questioning the real benefits of migrating to this model. So let me explain, and compare it with ASP.NET version 5 and 2.
The new WebApplication builder and some history of ASP.NET:Let us generate a new webapi application in .</description>
    </item>
    
    <item>
      <title>Using Secret Manager for Configuration in .NET</title>
      <link>http://www.ghassan.page/posts/use_secret_manager_in_dotnet/</link>
      <pubDate>Mon, 28 Nov 2022 19:41:04 -0700</pubDate>
      
      <guid>http://www.ghassan.page/posts/use_secret_manager_in_dotnet/</guid>
      <description>It is critical not to store passwords or API keys in our code.
For all environments for the development process: (QA, UAT, Pre-Production, and Production), it is easier to place it in a safe place (Azure Key Vault for example), and access it during deployment.
For developer machines, we can use Secret Manager, or sometimes called User Secrets, which has a built-in support in ASP.NET.
Enable Secret Storage:In the project you want to add a secret run this command:</description>
    </item>
    
  </channel>
</rss>
